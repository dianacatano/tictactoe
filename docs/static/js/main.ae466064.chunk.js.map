{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","squares","renderSquare","i","FunctionalGame","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","localHistory","current","winner","calculateWinner","moves","map","step","move","desc","jumpTo","status","slice","length","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"0LAKMA,EAAS,SAACC,GACZ,OACE,wBAAQC,UAAU,SAChBC,QAAU,kBAAMF,EAAME,WADxB,SAGIF,EAAMG,SAMVC,EAAQ,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASH,EAAa,EAAbA,QAEjBI,EAAe,SAACC,GACpB,OACE,cAACR,EAAD,CACEI,MAAQE,EAAQE,GAChBL,QAAU,kBAAMA,EAAQK,OAK5B,OACE,gCACE,sBAAKN,UAAU,YAAf,UACGK,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKL,UAAU,YAAf,UACGK,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKL,UAAU,YAAf,UACGK,EAAa,GACbA,EAAa,GACbA,EAAa,UAOlBE,EAAiB,SAACR,GAEtB,MAA8BS,mBAAS,CAAC,CAAEJ,QAAUK,MAAM,GAAGC,KAAK,SAAlE,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAwBQC,EAAeN,EACfO,EAAUD,EAAaJ,GACvBM,EAASC,EAAgBF,EAAQd,SAEjCiB,EAAQJ,EAAaK,KAAK,SAACC,EAAMC,GACrC,IAAMC,EAAOD,EAAM,eAAiBA,EAAO,aAE3C,OACE,6BACE,yBAAQvB,QAAU,kBAfX,SAACsB,GACdT,EAAcS,GACdP,EAAYO,EAAO,IAAO,GAaIG,CAAOF,IAA/B,cAA0CC,EAA1C,QADOD,MAMTG,EAAS,GAOb,OALEA,EADCR,EACQ,WAAaA,EAEb,iBAAmBJ,EAAU,IAAM,KAI5C,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEC,QAAUc,EAAQd,QAClBH,QA/CU,SAACK,GACnB,IAAMW,EAAeN,EAAQiB,MAAM,EAAGf,EAAa,GAE7CT,EADUa,EAAaA,EAAaY,OAAS,GAC3BzB,QAAQwB,QAE7BR,EAAgBhB,IAAYA,EAAQE,KAIvCF,EAAQE,GAAIS,EAAU,IAAM,IAC5BH,EAAW,GAAD,mBAAMK,GAAN,CAAoB,CAAEb,cAChCU,EAAcG,EAAaY,QAC3Bb,GAAYD,SAsCR,sBAAKf,UAAU,YAAf,UACE,8BAAO2B,IACP,6BAAMN,WAYhB,SAASD,EAAgBhB,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAxB,EAAI,EAAGA,EAAIwB,EAAMD,OAAQvB,IAAK,CACrC,kBAAkBwB,EAAMxB,GAAxB,GAAOyB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC5B,EAAD,IACA6B,SAASC,eAAe,W","file":"static/js/main.ae466064.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n\nconst Square = (props) => {\n    return (\n      <button className=\"square\"\n        onClick={ () => props.onClick() }\n      >\n        { props.value }\n      </button>\n    );\n  }\n\n\nconst Board = ({squares, onClick}) => {\n\n  const renderSquare = (i) => {\n    return (\n      <Square \n        value={ squares[i] }\n        onClick={ () => onClick(i) } \n      />\n    );\n  }\n\n    return (\n      <div>\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n\n\nconst FunctionalGame = (props) => {\n\n  const [history, setHistory] = useState([{ squares : Array(9).fill(null) }]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n\n\n  const handleClick = (i) =>{\n    const localHistory = history.slice(0, stepNumber + 1);\n    const current = localHistory[localHistory.length - 1];\n    const squares = current.squares.slice();\n\n    if(calculateWinner(squares) || squares[i]){\n      return;\n    }\n    \n    squares[i] =xIsNext ? 'X' : 'O';\n    setHistory([ ...localHistory, { squares } ]);\n    setStepNumber(localHistory.length);\n    setXIsNext(!xIsNext);\n  }\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXIsNext((step % 2) === 0);\n  }\n\n\n    const localHistory = history;\n    const current = localHistory[stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = localHistory.map( (step, move) => {\n      const desc = move? 'Go to move #' + move : 'Start game';\n\n      return(\n        <li key={move}>\n          <button onClick={ () => jumpTo(move) }> { desc } </button>\n        </li>\n      );\n    } )\n\n    let status = '';\n    if(winner){\n      status = 'Winner: ' + winner;\n    }else{\n      status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={ current.squares }\n            onClick={ handleClick }\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{ moves }</ol>\n        </div>\n      </div>\n    );\n  }\n// ========================================\n\nReactDOM.render(\n  <FunctionalGame />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}